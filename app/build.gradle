plugins {
    id "com.github.triplet.play" version "3.6.0"
}
apply plugin: "com.android.application"
apply plugin: "kotlin-android"
apply plugin: "kotlin-kapt"
apply plugin: "de.mannodermaus.android-junit5"

// Create a variable called keystorePropertiesFile, and initialize it to your
// keystore.properties file, in the rootProject folder.
def keystorePropertiesFile = rootProject.file("keystore.properties")
// Create this file with some default values because otherwise the Gradle build fails.
if (!keystorePropertiesFile.exists()) {
    keystorePropertiesFile.text = """\
// These are just some default values.
storePassword=yacguide
keyPassword=yacguide_key
keyAlias=key0
storeFile=keystore.jks
playServicesFile=google-services.json
"""
}
// Initialize a new Properties() object called keystoreProperties.
def keystoreProperties = new Properties()
// Load your keystore.properties file into the keystoreProperties object.
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

play {
    serviceAccountCredentials.set(rootProject.file(keystoreProperties["playServicesFile"]))
    // This disables GPP by default.
    enabled.set(false)
}

android {
    compileSdkVersion 33
    namespace "com.yacgroup.yacguide"
    defaultConfig {
        applicationId "com.yacgroup.yacguide"
        minSdkVersion 26
        targetSdkVersion 33
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testInstrumentationRunnerArguments runnerBuilder: "de.mannodermaus.junit5.AndroidJUnit5Builder"
        vectorDrawables.useSupportLibrary = true
        archivesBaseName = "yacguide"
    }
    buildToolsVersion = "33.0.1"
    signingConfigs {
        gplay {
            keyAlias keystoreProperties["keyAlias"]
            keyPassword keystoreProperties["keyPassword"]
            storeFile rootProject.file(keystoreProperties["storeFile"])
            storePassword keystoreProperties["storePassword"]
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
            signingConfig signingConfigs.gplay
        }
        debug {
            // This ensures that the app can be installed on the phone in parallel to any
            // already installed version.
            applicationIdSuffix ".debug"
            debuggable true
            signingConfig signingConfigs.debug
        }
    }
    flavorDimensions "default"
    productFlavors {
        stable {
            dimension "default"
            versionCode 6000
            versionName "0.6.0"
        }
        dev {
            dimension "default"
            applicationIdSuffix ".dev"
            versionCode 20220317
            versionName "20220317"
        }
    }
    playConfigs {
        stable {
            track.set("production")
            enabled.set(true)
        }
        dev {
            track.set("beta")
            enabled.set(true)
        }
    }
    packagingOptions {
        resources.excludes.add("META-INF/*")
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    // Room
    implementation fileTree(include: ["*.jar"], dir: "libs")
    implementation "com.google.android.material:material:1.7.0"
    implementation "androidx.appcompat:appcompat:1.5.1"
    implementation "androidx.constraintlayout:constraintlayout:2.1.4"
    implementation "androidx.test:core-ktx:1.5.0"

    def room_version = "2.4.3"

    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    // optional - Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$room_version"

    // optional - RxJava support for Room
    implementation "androidx.room:room-rxjava2:$room_version"

    // optional - Guava support for Room, including Optional and ListenableFuture
    implementation "androidx.room:room-guava:$room_version"

    implementation "net.sf.kxml:kxml2:2.3.0"
    implementation "com.caverock:androidsvg:1.4"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4"

    // Tests
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.9.1"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.9.1"
    testImplementation "org.junit.jupiter:junit-jupiter-params:5.9.1"

    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.4"
    androidTestImplementation "androidx.test:runner:1.5.1"
    androidTestImplementation "org.junit.jupiter:junit-jupiter"
    androidTestImplementation "org.junit.jupiter:junit-jupiter-api:5.9.1"
    androidTestImplementation "de.mannodermaus.junit5:android-test-core:1.3.0"
    androidTestRuntimeOnly "de.mannodermaus.junit5:android-test-runner:1.3.0"

    /*
     * Markwon for rendering Markdown
     *
     * https://github.com/noties/Markwon
     */
    def markwon_version = "4.6.2"
    implementation "io.noties.markwon:core:$markwon_version"
    implementation "io.noties.markwon:linkify:$markwon_version"

    /*
     * CSV library for tour book export
     *
     * https://commons.apache.org/proper/commons-csv/
     */
    implementation "org.apache.commons:commons-csv:1.9.0"

    // For introspection
    implementation "org.jetbrains.kotlin:kotlin-reflect:1.6.0"
}
repositories {
    mavenCentral()
}
